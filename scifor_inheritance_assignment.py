# -*- coding: utf-8 -*-
"""Scifor_Inheritance_Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1diEUVgjNQmK2vM2mtiVDC_zH9KsFRuKL
"""

# single level inheritance
class Vehicle:
    def __init__(self, make, model):
        self.make = make
        self.model = model

    def display_info(self):
        print(f"Make: {self.make}, Model: {self.model}")


# Subclass (inherits from Vehicle)
class Car(Vehicle):
    def __init__(self, make, model, num_doors):
        super().__init__(make, model)
        self.num_doors = num_doors

    def display_info(self):
        print(f"Make: {self.make}, Model: {self.model}, Doors: {self.num_doors}")


my_car = Car("Toyota", "Corolla", 4)

my_car.display_info()

#Multiple levelinheritance
class Vehicle:
    def __init__(self, make, model):
        self.make = make
        self.model = model

    def display_info(self):
        print(f"Make: {self.make}, Model: {self.model}")


# Parent class (subclass of Vehicle)
class Car(Vehicle):
    def __init__(self, make, model, fuel_type):
        super().__init__(make, model)
        self.fuel_type = fuel_type

    def display_info(self):  # Overriding the display_info method from the grandparent class
        print(f"Make: {self.make}, Model: {self.model}, Fuel Type: {self.fuel_type}")


# Subclass (subclass of Car)
class ElectricCar(Car):
    def __init__(self, make, model, fuel_type, battery_capacity):
        super().__init__(make, model, fuel_type)
        self.battery_capacity = battery_capacity

    def display_info(self):  # Overriding the display_info method from the parent class
        print(f"Make: {self.make}, Model: {self.model}, Fuel Type: {self.fuel_type}, Battery Capacity: {self.battery_capacity} kWh")


# Subclass (subclass of Car)
class HybridCar(Car):
    def __init__(self, make, model, fuel_type, battery_capacity, engine_type):
        super().__init__(make, model, fuel_type)
        self.battery_capacity = battery_capacity
        self.engine_type = engine_type

    def display_info(self):
        print(f"Make: {self.make}, Model: {self.model}, Fuel Type: {self.fuel_type}, Battery Capacity: {self.battery_capacity} kWh, Engine Type: {self.engine_type}")



car1 = Car("Toyota", "Corolla", "Petrol")
electric_car1 = ElectricCar("Tesla", "Model S", "Electric", 100)
hybrid_car1 = HybridCar("Toyota", "Prius", "Hybrid", 50, "Petrol + Electric")


car1.display_info()
electric_car1.display_info()
hybrid_car1.display_info()